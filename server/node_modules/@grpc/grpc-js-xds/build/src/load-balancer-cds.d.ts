import { experimental, ChannelOptions } from '@grpc/grpc-js';
import Endpoint = experimental.Endpoint;
import LoadBalancer = experimental.LoadBalancer;
import ChannelControlHelper = experimental.ChannelControlHelper;
import TypedLoadBalancingConfig = experimental.TypedLoadBalancingConfig;
export declare class CdsLoadBalancer implements LoadBalancer {
    private readonly channelControlHelper;
    private childBalancer;
    private latestCdsUpdate;
    private latestConfig;
    private latestAttributes;
    private xdsClient;
    private clusterTree;
    private updatedChild;
    constructor(channelControlHelper: ChannelControlHelper, options: ChannelOptions);
    private reportError;
    private addCluster;
    private removeCluster;
    private clearClusterTree;
    updateAddressList(endpointList: Endpoint[], lbConfig: TypedLoadBalancingConfig, attributes: {
        [key: string]: unknown;
    }): void;
    exitIdle(): void;
    resetBackoff(): void;
    destroy(): void;
    getTypeName(): string;
}
export declare function setup(): void;
