"use strict";
// Original file: deps/envoy-api/envoy/config/overload/v3/overload.proto
Object.defineProperty(exports, "__esModule", { value: true });
exports._envoy_config_overload_v3_ScaleTimersOverloadActionConfig_TimerType = void 0;
// Original file: deps/envoy-api/envoy/config/overload/v3/overload.proto
var _envoy_config_overload_v3_ScaleTimersOverloadActionConfig_TimerType;
(function (_envoy_config_overload_v3_ScaleTimersOverloadActionConfig_TimerType) {
    /**
     * Unsupported value; users must explicitly specify the timer they want scaled.
     */
    _envoy_config_overload_v3_ScaleTimersOverloadActionConfig_TimerType[_envoy_config_overload_v3_ScaleTimersOverloadActionConfig_TimerType["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * Adjusts the idle timer for downstream HTTP connections that takes effect when there are no active streams.
     * This affects the value of :ref:`HttpConnectionManager.common_http_protocol_options.idle_timeout
     * <envoy_v3_api_field_config.core.v3.HttpProtocolOptions.idle_timeout>`
     */
    _envoy_config_overload_v3_ScaleTimersOverloadActionConfig_TimerType[_envoy_config_overload_v3_ScaleTimersOverloadActionConfig_TimerType["HTTP_DOWNSTREAM_CONNECTION_IDLE"] = 1] = "HTTP_DOWNSTREAM_CONNECTION_IDLE";
    /**
     * Adjusts the idle timer for HTTP streams initiated by downstream clients.
     * This affects the value of :ref:`RouteAction.idle_timeout <envoy_v3_api_field_config.route.v3.RouteAction.idle_timeout>` and
     * :ref:`HttpConnectionManager.stream_idle_timeout
     * <envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.stream_idle_timeout>`
     */
    _envoy_config_overload_v3_ScaleTimersOverloadActionConfig_TimerType[_envoy_config_overload_v3_ScaleTimersOverloadActionConfig_TimerType["HTTP_DOWNSTREAM_STREAM_IDLE"] = 2] = "HTTP_DOWNSTREAM_STREAM_IDLE";
    /**
     * Adjusts the timer for how long downstream clients have to finish transport-level negotiations
     * before the connection is closed.
     * This affects the value of
     * :ref:`FilterChain.transport_socket_connect_timeout <envoy_v3_api_field_config.listener.v3.FilterChain.transport_socket_connect_timeout>`.
     */
    _envoy_config_overload_v3_ScaleTimersOverloadActionConfig_TimerType[_envoy_config_overload_v3_ScaleTimersOverloadActionConfig_TimerType["TRANSPORT_SOCKET_CONNECT"] = 3] = "TRANSPORT_SOCKET_CONNECT";
})(_envoy_config_overload_v3_ScaleTimersOverloadActionConfig_TimerType = exports._envoy_config_overload_v3_ScaleTimersOverloadActionConfig_TimerType || (exports._envoy_config_overload_v3_ScaleTimersOverloadActionConfig_TimerType = {}));
//# sourceMappingURL=ScaleTimersOverloadActionConfig.js.map